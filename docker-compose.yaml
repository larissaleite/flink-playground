version: "2.2"
services:
  jobmanager:
    build: .
    image: pyflink/playgrounds:1.13.0-rc2
    volumes:
      - .:/opt/examples
    hostname: "jobmanager"
    expose:
      - "6123"
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager

  taskmanager:
    build: .
    image: pyflink/playgrounds:1.13.0-rc2
    volumes:
      - .:/opt/examples
    expose:
      - "6121"
      - "6122"
    depends_on:
      - jobmanager
    command: taskmanager
    links:
      - jobmanager:jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
      - TASK_MANAGER_NUMBER_OF_TASK_SLOTS=20

  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.0
    tmpfs: "/datalog"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181"

  kafka:
    image: confluentinc/cp-kafka:5.4.0
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092"
      KAFKA_CREATE_TOPICS: "user.events.v1:1:1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092"

  producer:
    build: .
    command: [ "python", "/opt/flink/code/kafka_producer.py" ]
    depends_on:
      - zookeeper
      - kafka
    restart: on-failure
